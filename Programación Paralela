import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

public class EjemploProgramacionParalela {
    public static void main(String[] args) {
        int numTareas = 5;

        // Creamos un ExecutorService con 3 hilos en su pool
        ExecutorService executor = Executors.newFixedThreadPool(3);

        for (int i = 0; i < numTareas; i++) {
            final int tareaId = i;
            // Ejecutamos tareas en paralelo
            executor.submit(() -> {
                System.out.println("Tarea " + tareaId + " est√° siendo procesada por el hilo " + Thread.currentThread().getId());
            });
        }

        // Apagamos el ExecutorService una vez que todas las tareas se completen
        executor.shutdown();

        try {
            executor.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println("Todas las tareas han sido completadas.");
    }
}
